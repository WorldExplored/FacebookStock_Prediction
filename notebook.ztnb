notebookId = "4c2d35c1-fcd7-4464-a291-e4431363d365"
notebookName = ""

cellName = ""
[cells.33f6dc1c-6d0b-4d2f-9db9-6fce1c6df2b5]
cellType = "code"
hideCell = "False"
hideCode = "False"
code = """
from prophet import Prophet
import pandas as pd
import plotly.graph_objects as go
import zero_true as zt

# Carica il tuo dataset
df = pd.read_csv('FCStocks.csv')

# Prepara il dataset per Prophet
df_prophet = df[['Date', 'Close']].rename(columns={'Date': 'ds', 'Close': 'y'})

# Converti 'ds' in datetime se non lo Ã¨ giÃ 
df_prophet['ds'] = pd.to_datetime(df_prophet['ds'])

# Crea un'istanza del modello Prophet
m = Prophet()

# Adatta il modello con il tuo dataframe
m.fit(df_prophet)

# Crea un dataframe futuro per 365 giorni nel futuro
future = m.make_future_dataframe(periods=365)

# Prevedi i prezzi futuri delle azioni
forecast = m.predict(future)

# Genera un layout per il plot
layout = {
    "title": "Forecasted Stock Prices",
    "xaxis": {"title": "Date"},
    "yaxis": {"title": "Stock Price"}
}

# Usa Plotly per creare il grafico delle previsioni
fig = go.Figure()

# Aggiungi la serie storica
fig.add_trace(go.Scatter(x=df_prophet['ds'], y=df_prophet['y'], name='Historical Close'))

# Aggiungi la previsione
fig.add_trace(go.Scatter(x=forecast['ds'], y=forecast['yhat'], name='Forecast'))

# Aggiungi intervalli di confidenza se necessario
fig.add_trace(go.Scatter(x=forecast['ds'], y=forecast['yhat_upper'], name='Upper Confidence Interval', line=dict(width=0)))
fig.add_trace(go.Scatter(x=forecast['ds'], y=forecast['yhat_lower'], name='Lower Confidence Interval', line=dict(width=0), fill='tonexty'))

# Configura il layout del grafico
fig.update_layout(layout)

# Visualizza il grafico
fig.show()
"""

